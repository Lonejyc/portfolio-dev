---
import cn from 'mxcn';
import type { CollectionEntry } from 'astro:content';

interface Props {
	project: CollectionEntry<'mmi' | 'myrole'>;
    index: number;
	invert?: boolean;
}

const { index, invert } = Astro.props as Props;
const { data, slug } = Astro.props.project;

import Pill from './Pill.astro';
---
<li class="card w-full first:border-t border-b border-black p-4">
	<a href={`/work/${slug}`}>
		<div class="img hidden">
			<img src={data.img} alt={data.img_alt || ''} loading="lazy" decoding="async" />
		</div>
		<div class={cn("card-child flex gap-8 items-center min-h-28, {'flex-row-reverse': invert}")}>
            <span class="text-6xl md:text-8xl font-['Sentient-Bold'] md:w-1/7">0{index}</span>
            <div class="vertical-line-child"></div>
            <div class="flex flex-col gap-4 h-full justify-center">
                <h4 class={cn('font-medium text-2xl md:text-4xl m-0', {'text-right': invert})}>{data.title}</h4>
                <ul class="hidden md:flex flex-wrap gap-2 tags-list">
                    {data.support.map((s) => <li><Pill invert>{s}</Pill></li>)}
                </ul>
            </div>
		</div>
	</a>
</li>

<script>
	import { gsap } from 'gsap';
	
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelectorAll('.card').forEach((card) => {
			const tagsList = card.querySelector('.tags-list');
			const h4 = card.querySelector('h4');
			const flexDiv = card.querySelector('.card-child');
			const innerFlexDiv = card.querySelector('.flex.flex-col.gap-4');
			
			// État initial
			gsap.set(innerFlexDiv, {
				justifyContent: 'center',
				minHeight: '110px'
			});
			
			gsap.set(tagsList, { 
				maxHeight: 0, 
				opacity: 0,
			});
			
			// Animation au hover - SANS timeline
			card.addEventListener('mouseenter', () => {
				// Toutes les animations lancées exactement en même temps
				gsap.to(flexDiv, {
					minHeight: '160px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
				
				gsap.to(innerFlexDiv, {
					justifyContent: 'flex-start',
					paddingTop: '16px',
					paddingBottom: '16px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
				
				gsap.to(tagsList, {
					maxHeight: '60px',
					opacity: 1,
					marginTop: '16px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
			});
			
			// Animation au mouse leave
			card.addEventListener('mouseleave', () => {
				// Toutes les animations inversées en même temps
				gsap.to(flexDiv, {
					minHeight: '120px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
				
				gsap.to(innerFlexDiv, {
					justifyContent: 'center',
					paddingTop: '0px',
					paddingBottom: '0px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
				
				gsap.to(tagsList, {
					maxHeight: 0,
					opacity: 0,
					marginTop: '0px',
					duration: 0.4,
					ease: 'power2.inOut'
				});
			});
		});
	});
</script>